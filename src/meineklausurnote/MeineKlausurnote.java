package meineklausurnote;

import java.util.logging.Level;
import java.util.logging.Logger;

public class MeineKlausurnote extends javax.swing.JFrame {

    public MeineKlausurnote() {
        initComponents();
        new Thread(() -> {
            
            try {
                Thread.sleep(1000*3);
                
                while(true){
                    
                    
                    final String ownPointsStr = ownPoints.getText();
                    final String maxPointsStr = maxPoints.getText();
                    
                    if(!ownPointsStr.isEmpty() && !maxPointsStr.isEmpty()) {
                        
                        int points;
                        int maxPoints;
                        
                        if(ownPointsStr.matches("[0-9]+")){
                            points = Integer.parseInt(ownPointsStr);
                        } else {
                            continue;
                        }
                        
                        if(maxPointsStr.matches("[0-9]+")){
                            maxPoints = Integer.parseInt(maxPointsStr);
                        } else {
                            continue;
                        }
                        
                        double percentage = ((100.0 / maxPoints) * points);
                        
                        System.out.println(percentage);
                        
                        if(percentage > 94.9){
                            
                            mark.setText("1.0");
                            continue;
                            
                        } else if(percentage >= 89.5){
                            
                            mark.setText("1.3");
                            continue;
                            
                        } else if(percentage >= 84.3){
                            
                            mark.setText("1.7");
                            continue;
                            
                        } else if(percentage >= 79.0){
                            
                            mark.setText("2.0");
                            continue;
                            
                        } else if(percentage >= 73.7){
                            
                            mark.setText("2.3");
                            continue;
                            
                        } else if(percentage >= 68.2){
                            
                            mark.setText("2.7");
                            continue;
                            
                        } else if(percentage >= 63.1){
                            
                            mark.setText("3.0");
                            continue;
                            
                        } else if(percentage >= 57.9){
                            
                            mark.setText("3.3");
                            continue;
                            
                        } else if(percentage >= 52.6){
                            
                            mark.setText("3.7");
                            continue;
                            
                        } else if(percentage >= 50.0){
                            
                            mark.setText("4.0");
                            continue;
                            
                        } else {
                            
                            mark.setText("5.0");
                            continue;
                            
                        }
                        
                    }
                    
                }   } catch (InterruptedException ex) {
                Logger.getLogger(MeineKlausurnote.class.getName()).log(Level.SEVERE, null, ex);
            }
        }).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ownPoints = new javax.swing.JTextField();
        maxPoints = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        mark = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Meine Punktzahl");

        jLabel2.setText("Max. Punktzahl");

        ownPoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ownPointsActionPerformed(evt);
            }
        });

        maxPoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxPointsActionPerformed(evt);
            }
        });

        jLabel3.setText("Note");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ownPoints)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(97, 97, 97)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(maxPoints))
                .addContainerGap(62, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mark, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(152, 152, 152))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ownPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        pack();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MeineKlausurnote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MeineKlausurnote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MeineKlausurnote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MeineKlausurnote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MeineKlausurnote().setVisible(true);
            }
        });
        
    }

    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField mark;
    private javax.swing.JTextField maxPoints;
    private javax.swing.JTextField ownPoints;
}
